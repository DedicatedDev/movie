syntax = "proto3";
package movie.movie;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "movie/movie/params.proto";
import "movie/movie/movie.proto";
import "movie/movie/review.proto";
import "movie/movie/stored_movie.proto";
import "movie/movie/stored_review.proto";
// this line is used by starport scaffolding # 1

option go_package = "movie/x/movie/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/movie/movie/params";
  }
  // Queries a Movie by id.
	rpc Movie(QueryGetMovieRequest) returns (QueryGetMovieResponse) {
		option (google.api.http).get = "/movie/movie/movie/{id}";
	}

	// Queries a list of Movie items.
	rpc MovieAll(QueryAllMovieRequest) returns (QueryAllMovieResponse) {
		option (google.api.http).get = "/movie/movie/movie";
	}

// Queries a Review by id.
	rpc Review(QueryGetReviewRequest) returns (QueryGetReviewResponse) {
		option (google.api.http).get = "/movie/movie/review/{id}";
	}

	// Queries a list of Review items.
	rpc ReviewAll(QueryAllReviewRequest) returns (QueryAllReviewResponse) {
		option (google.api.http).get = "/movie/movie/review";
	}

// Queries a StoredMovie by index.
	rpc StoredMovie(QueryGetStoredMovieRequest) returns (QueryGetStoredMovieResponse) {
		option (google.api.http).get = "/movie/movie/stored_movie/{title}";
	}

	// Queries a list of StoredMovie items.
	rpc StoredMovieAll(QueryAllStoredMovieRequest) returns (QueryAllStoredMovieResponse) {
		option (google.api.http).get = "/movie/movie/stored_movie";
	}

// Queries a StoredReview by index.
	rpc StoredReview(QueryGetStoredReviewRequest) returns (QueryGetStoredReviewResponse) {
		option (google.api.http).get = "/movie/movie/stored_review/{movieId}/{creator}";
	}

	// Queries a list of StoredReview items.
	rpc StoredReviewAll(QueryAllStoredReviewRequest) returns (QueryAllStoredReviewResponse) {
		option (google.api.http).get = "/movie/movie/stored_review";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetMovieRequest {
	uint64 id = 1;
}

message QueryGetMovieResponse {
	Movie Movie = 1 [(gogoproto.nullable) = false];
}

message QueryAllMovieRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMovieResponse {
	repeated Movie Movie = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetReviewRequest {
	uint64 id = 1;
}

message QueryGetReviewResponse {
	Review Review = 1 [(gogoproto.nullable) = false];
}

message QueryAllReviewRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReviewResponse {
	repeated Review Review = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetStoredMovieRequest {
	  string title = 1;

}

message QueryGetStoredMovieResponse {
	StoredMovie storedMovie = 1 [(gogoproto.nullable) = false];
}

message QueryAllStoredMovieRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllStoredMovieResponse {
	repeated StoredMovie storedMovie = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetStoredReviewRequest {
	  uint64 movieId = 1;
  string creator = 2;

}

message QueryGetStoredReviewResponse {
	StoredReview storedReview = 1 [(gogoproto.nullable) = false];
}

message QueryAllStoredReviewRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllStoredReviewResponse {
	repeated StoredReview storedReview = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
